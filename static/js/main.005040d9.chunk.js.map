{"version":3,"sources":["components/Form/Form.js","components/App/App.js","reportWebVitals.js","index.js"],"names":["Form","useState","file","setFile","name","className","noValidate","type","placeholder","autoComplete","onClick","id","onChange","e","preventDefault","target","files","htmlFor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQA2FeA,MAxFf,WACI,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAYA,OACI,uBAAMC,KAAK,OAAOC,UAAU,OAAOC,YAAU,EAA7C,UACI,oBAAID,UAAU,cAAd,4CACA,sBAAKA,UAAU,kBAAf,UACI,sBAAKA,UAAU,wBAAf,UACI,mBAAGA,UAAU,mBAAb,8DACA,uBACAE,KAAK,OACLH,KAAK,OACLC,UAAU,cACVG,YAAY,mDACZC,aAAa,WAGjB,sBAAKJ,UAAU,wBAAf,UACI,mBAAGA,UAAU,mBAAb,sCACA,uBACAE,KAAK,OACLH,KAAK,OACLC,UAAU,cACVG,YAAY,2BACZC,aAAa,WAGjB,sBAAKJ,UAAU,wBAAf,UACI,mBAAGA,UAAU,mBAAb,4CACA,uBACAE,KAAK,OACLH,KAAK,OACLC,UAAU,cACVG,YAAY,iCACZC,aAAa,WAGjB,sBAAKJ,UAAU,wBAAf,UACI,mBAAGA,UAAU,mBAAb,0EACA,uBACAE,KAAK,SACLH,KAAK,SACLC,UAAU,cACVG,YAAY,+DACZC,aAAa,WAGjB,sBAAKJ,UAAU,wBAAf,UACI,mBAAGA,UAAU,mBAAb,4CACA,uBACAE,KAAK,OACLH,KAAK,UACLC,UAAU,cACVG,YAAY,iCACZC,aAAa,WAGhBP,EACG,sBAAKG,UAAU,4BAA4BK,QA3D3D,WACIP,EAAQ,KA0DI,UACI,mBAAGE,UAAU,kBAAb,SAAgCH,EAAKE,OACrC,wBAAQG,KAAK,QAAQF,UAAU,gCAGnC,sBAAKA,UAAU,8BAAf,UACI,uBAAOE,KAAK,OAAOI,GAAG,cAAcN,UAAU,0BAA0BO,SAvE5F,SAA2BC,GACvBA,EAAEC,iBACF,IAAIZ,EAAOW,EAAEE,OAAOC,MAAM,GAC1Bb,EAAQD,MAqEQ,uBAAOe,QAAQ,cAAcZ,UAAU,2BAAvC,mGAIZ,sBAAKA,UAAU,2BAAf,UACI,uBAAOA,UAAU,iBAAiBE,KAAK,aACvC,mBAAGF,UAAU,uBAAb,mPAEJ,wBAAQE,KAAK,SAASF,UAAU,sBAAhC,wECxEGa,MAXf,WACE,OACE,qBAAKb,UAAU,MAAf,SACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,SCKOc,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.005040d9.chunk.js","sourcesContent":["import { useState } from 'react';\r\nimport './Form.css';\r\n\r\nfunction Form() {\r\n    const [file, setFile] = useState('');\r\n\r\n    function uploadFileHandler(e) {\r\n        e.preventDefault();\r\n        let file = e.target.files[0];\r\n        setFile(file);\r\n    }\r\n    \r\n    function deleteFileHandler() {\r\n        setFile('');\r\n    }\r\n\r\n    return (\r\n        <form name=\"form\" className=\"form\" noValidate>\r\n            <h1 className=\"form__title\">Форма</h1>\r\n            <div className=\"form__container\">\r\n                <div className=\"form__input-container\">\r\n                    <p className=\"form__input-name\">Название</p>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    className=\"form__input\"\r\n                    placeholder=\"Название\"\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"form__input-container\">\r\n                    <p className=\"form__input-name\">Дата</p>\r\n                    <input\r\n                    type=\"date\"\r\n                    name=\"date\"\r\n                    className=\"form__input\"\r\n                    placeholder=\"Дата\"\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"form__input-container\">\r\n                    <p className=\"form__input-name\">Время</p>\r\n                    <input\r\n                    type=\"time\"\r\n                    name=\"time\"\r\n                    className=\"form__input\"\r\n                    placeholder=\"Время\"\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"form__input-container\">\r\n                    <p className=\"form__input-name\">Количество</p>\r\n                    <input\r\n                    type=\"number\"\r\n                    name=\"number\"\r\n                    className=\"form__input\"\r\n                    placeholder=\"Количество\"\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                <div className=\"form__input-container\">\r\n                    <p className=\"form__input-name\">Адрес</p>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"address\"\r\n                    className=\"form__input\"\r\n                    placeholder=\"Адрес\"\r\n                    autoComplete=\"off\"\r\n                    />\r\n                </div>\r\n                {file ? (\r\n                    <div className=\"form__file-name-container\" onClick={deleteFileHandler}>\r\n                        <p className=\"form__file-name\">{file.name}</p>\r\n                        <button type=\"reset\" className=\"form__file-delete-button\" />\r\n                    </div>\r\n                ) : (\r\n                    <div className=\"form__file-upload-container\">\r\n                        <input type=\"file\" id=\"input__file\" className=\"form__file-upload-input\" onChange={uploadFileHandler}/>\r\n                        <label htmlFor=\"input__file\" className=\"form__file-upload-button\">Загрузить файл</label>\r\n                    </div>\r\n                )}\r\n            </div> \r\n            <div className=\"form__checkbox-container\">\r\n                <input className=\"form__checkbox\" type=\"checkbox\" />\r\n                <p className=\"form__checkbox-title\">Я согласен с политикой конфиденциальности</p>\r\n            </div>\r\n            <button type=\"submit\" className=\"form__submit-button\">Отправить</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;\r\n","import './App.css';\nimport Form from '../Form/Form';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"app__content\">\n        <Form\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}